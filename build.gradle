/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Steffen' at '27.04.16 14:57' with Gradle 2.6
 *
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

buildscript {
    dependencies {
        classpath 'de.dynamicfiles.projects.gradle.plugins:javafx-gradle-plugin:8.4.1'
    }
    repositories {
        mavenCentral()
    }
}

//Apply the java plugin to add support for Java and eclipse
apply plugin: 'java'
apply plugin: 'eclipse'

// Require java 1.8 for pseudo-functionality
compileJava {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Declare the dependency for your favourite test framework you want to use in your tests.
    testCompile 'junit:junit:4.12'
}

// Set a main class to execute when the jar is started
jar {
	manifest {
		attributes 'Main-Class': 'org.softlang.company.MainApp'
	}
}

apply plugin: 'javafx-gradle-plugin'
jfx {
	mainClass = 'org.softlang.company.MainApp'
}

//Try to enforce code style via save actions
//Clean .settings folder on eclipseClean
tasks.cleanEclipse.doLast {
    delete("${project.projectDir}/.settings/")
}

//copy eclipse setting files on "gradle eclipse"
tasks.eclipse.doLast {

    //copy formatter name, save actions and defined newline files
    copy{
        from "${project.projectDir}/misc/settings/"
        into "${project.projectDir}/.settings/"
        include "org.eclipse.core.runtime.prefs"
        include "org.eclipse.jdt.ui.prefs"
    }

    // append formatter settings to autocreated file
    File formatterPrefs = file("${project.projectDir}/.settings/org.eclipse.jdt.core.prefs")
    String line;
    BufferedReader read = new BufferedReader(new FileReader("${project.projectDir}/misc/settings/org.eclipse.jdt.core.prefs"))
    while ((line=read.readLine())!=null){
       formatterPrefs.append(line+"\r\n")  
   }
}
